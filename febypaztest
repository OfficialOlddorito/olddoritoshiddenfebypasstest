--- might not work still in beta
local SynxLib = {}
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")

function SynxLib:CreateWindow(WindowName)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = WindowName
    screenGui.Parent = game.CoreGui
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 150)
    frame.Position = UDim2.new(0.5, -150, 0.5, -75)
    frame.Parent = screenGui
    
    local textBox = Instance.new("TextBox")
    textBox.Size = UDim2.new(0, 280, 0, 50)
    textBox.Position = UDim2.new(0.5, -140, 0.5, -65)
    textBox.PlaceholderText = "Enter Asset ID"
    textBox.Parent = frame
    
    local runButton = Instance.new("TextButton")
    runButton.Size = UDim2.new(0, 100, 0, 30)
    runButton.Position = UDim2.new(0.5, -50, 0.5, 10)
    runButton.Text = "Run"
    runButton.Parent = frame
    
    return textBox, runButton
end

-- Use Atomic Binding and Legacy APIs
local function AtomicBindingAndExecute(assetId)
    local success, asset = pcall(function()
        -- Load Asset dynamically, bypassing InsertService
        return game:GetObjects("rbxassetid://" .. assetId)[1]
    end)
    
    if success and asset then
        asset.Parent = ServerScriptService
        asset.Disabled = false
    else
        warn("Failed to load or execute Asset ID: ", assetId)
    end
end

local textBox, runButton = SynxLib:CreateWindow("Synx Window")

    local assetId = tonumber(textBox.Text)
    if assetId then
        AtomicBindingAndExecute(assetId)
    end
end)

end)

RemoteFunction.OnServerInvoke = function(player, targetName)
    obfuscatedKill(targetName)
end
